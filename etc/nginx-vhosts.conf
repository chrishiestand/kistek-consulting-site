# http context

lua_shared_dict prometheus_metrics 10M;
lua_package_path "/var/opt/nginx-lua-prometheus/?.lua";

init_by_lua '
prometheus = require("prometheus").init("prometheus_metrics")
metric_requests = prometheus:counter(
"nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
metric_latency = prometheus:histogram(
"nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
metric_connections = prometheus:gauge(
"nginx_http_connections", "Number of HTTP connections", {"state"})
';

log_by_lua '
local host = ngx.var.host:gsub("^www.", "")
metric_requests:inc(1, {host, ngx.var.status})
metric_latency:observe(ngx.now() - ngx.req.start_time(), {host})
';

server {
    listen 1080 default_server;

    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 1443 ssl http2 default_server;

    root /www/kistek.consulting;
    server_name kistek.consulting;

    ssl_certificate     /opt/tls/kistek.consulting/tls.crt;
    ssl_certificate_key /opt/tls/kistek.consulting/tls.key;

    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

    location ~ /\. { deny all; }
}

server {
  listen 9427;
  location /metrics {
    content_by_lua '
      metric_connections:set(ngx.var.connections_reading, {"reading"})
      metric_connections:set(ngx.var.connections_waiting, {"waiting"})
      metric_connections:set(ngx.var.connections_writing, {"writing"})
      prometheus:collect()
    ';
  }
}
